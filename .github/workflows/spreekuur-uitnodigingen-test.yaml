name: spreekuur-uitnodigingen-test

on:
  workflow_dispatch:
    inputs:
      custom_var:
        description: 'Filler'
        required: true
    
env:
  CLOUDSMITH_REGISTRY: docker.cloudsmith.io

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Install Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/

      - name: Start Minikube
        run: |
          minikube start --driver=docker
          minikube status

      - name: Set up kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          kubectl config use-context minikube

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Login to Cloudsmith
        uses: docker/login-action@v2
        with:
          registry: ${{ env.CLOUDSMITH_REGISTRY }}
          username: ${{ secrets.CLOUDSMITH_USERNAME }}
          password: ${{ secrets.CLOUDSMITH_PASSWORD }}   
          
      - name: Create cloudsmith-secret
        run: |
          kubectl create secret generic cloudsmith-secret \
          --from-literal=username=${{ secrets.CLOUDSMITH_USERNAME }} \
          --from-literal=password=${{ secrets.CLOUDSMITH_PASSWORD }}

      - name: Create cloudsmith-pull-secret
        run: |
          kubectl create secret docker-registry cloudsmith-pull-secret \
          --docker-server=${{ env.CLOUDSMITH_REGISTRY }} \
          --docker-username=${{ secrets.CLOUDSMITH_USERNAME }} \
          --docker-password=${{ secrets.CLOUDSMITH_PASSWORD }}

      - name: Install Helm Chart
        run: |
          ls -al
          helm install test charts/run-cypress --set filler.image.repository=${{ github.event.inputs.custom_var }}

      - name: Wait for Cypress job to initialized
        run: |
          while ! kubectl get job test-cypress --namespace default; do
            echo "Waiting for job to be created..."
            sleep 1
          done
          echo "Job created. Waiting for job to complete..."

      - name: Wait for Cypress job to complete
        run: |
          kubectl wait --for=condition=complete --timeout=600s job/test-cypress --namespace default